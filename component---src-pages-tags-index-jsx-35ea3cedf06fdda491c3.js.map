{"version":3,"sources":["webpack://tvqqq.github.io/./src/components/TagCard/tags.module.less","webpack://tvqqq.github.io/./src/components/TagCard/index.jsx","webpack://tvqqq.github.io/./src/pages/tags/index.jsx"],"names":["tagCard","props","img","name","description","color","tagPage","Config","Link","className","style","to","Utils","backgroundImage","data","edges","allFile","rawTags","allMarkdownRemark","map","edge","node","frontmatter","tags","reduce","prev","curr","concat","filter","tag","index","indexOf","sort","tagData","Header","title","path","Sidebar","gutter","val","key","xs","sm","md","lg","childImageSharp","fluid","src"],"mappings":"yTACWA,EAAU,8BCmCrB,EA9BgB,SAACC,GACf,IACEC,EACED,EADFC,IAAKC,EACHF,EADGE,KAAMC,EACTH,EADSG,YAAaC,EACtBJ,EADsBI,MAEpBC,EAAUC,cAChB,OACE,gBAAC,EAAAC,KAAD,CAAMC,UAAWC,EAAeC,GAAIC,mBAAqBN,EAASH,IAChE,uBAAKM,UAAWC,GACd,uBACED,UDbU,6BCcVC,MAAO,CACLG,gBAAgB,OAAQX,EAAT,OAGnB,uBAAKO,UDjBO,8BCkBV,uBAAKA,UAAU,cACb,sBAAIC,MAAO,CAAEL,MAAM,GAAIA,IAAvB,IAEGF,IAGL,yBACGC,OCoFb,EAnGa,SAAC,GAAc,IAAZU,EAAW,EAAXA,KACKC,EAAYD,EAAvBE,QAAWD,MACbE,EAAUH,EAAKI,kBAAkBH,MACpCI,KAAI,SAACC,GAAD,OAAUA,EAAKC,KAAKC,YAAYC,QACpCC,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,OAAOD,MACtCT,EACGW,QAAO,SAACC,EAAKC,GAAN,OAAgBA,IAAUb,EAAQc,QAAQF,MACjDG,OAEH,IAAMC,EAAU1B,SAChB,OACE,qBAAQE,UAAU,gBAChB,qBAAQA,UAAU,aAChB,gBAACyB,EAAA,EAAD,MACA,gBAAC,IAAD,CACEC,MAAM,OACN/B,YAAY,4BACZgC,KAAK,SAEP,gBAACC,EAAA,EAAD,KACE,gCACE,uBAAK5B,UAAU,kBACb,sBAAIA,UAAU,iBAAd,UAEF,qBAAK6B,OAAQ,CAAC,GAAI,KAEdvB,EAAMI,KAAI,SAACoB,GAAD,OACR,qBAAKC,IAAKD,EAAIlB,KAAKlB,KAAMsC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACnD,gBAAC,EAAD,CACE1C,IAAKqC,EAAIlB,KAAKwB,gBAAgBC,MAAMC,IACpC5C,KAAMoC,EAAIlB,KAAKlB,KACfC,YAAa6B,EAAQM,EAAIlB,KAAKlB,MAAMC,YACpCC,MAAO4B,EAAQM,EAAIlB,KAAKlB,MAAME","file":"component---src-pages-tags-index-jsx-35ea3cedf06fdda491c3.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport var tagCard = \"tags-module--tagCard--2FX1L\";\nexport var tagImg = \"tags-module--tagImg--3Cpjo\";\nexport var pd20px = \"tags-module--pd20px--1F0K2\";","import React from 'react';\nimport { Link } from 'gatsby';\nimport Config from '../../../config';\nimport Utils from '../../utils/pageUtils';\nimport * as style from './tags.module.less';\n\nconst TagCard = (props) => {\n  const {\n    img, name, description, color,\n  } = props;\n  const tagPage = Config.pages.tag;\n  return (\n    <Link className={style.tagCard} to={Utils.resolvePageUrl(tagPage, name)}>\n      <div className={style.tagCard}>\n        <div\n          className={style.tagImg}\n          style={{\n            backgroundImage: `url(${img})`,\n          }}\n        />\n        <div className={style.pd20px}>\n          <div className=\"textCenter\">\n            <h4 style={{ color: `${color}` }}>\n              #\n              {name}\n            </h4>\n          </div>\n          <p>\n            {description}\n          </p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default TagCard;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport {\n  Layout, Row, Col,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Header from '../../components/PageLayout/Header';\nimport SEO from '../../components/Seo';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport TagCard from '../../components/TagCard';\nimport Config from '../../../config';\n\nconst Tags = ({ data }) => {\n  const { allFile: { edges } } = data;\n  const rawTags = data.allMarkdownRemark.edges\n    .map((edge) => edge.node.frontmatter.tags)\n    .reduce((prev, curr) => prev.concat(curr));\n  rawTags\n    .filter((tag, index) => index === rawTags.indexOf(tag))\n    .sort(); // Remove duplicates and sort values\n  // const tagPage = Config.pages.tag;\n  const tagData = Config.tags;\n  return (\n    <Layout className=\"outerPadding\">\n      <Layout className=\"container\">\n        <Header />\n        <SEO\n          title=\"Tags\"\n          description=\"Here is all my post tags.\"\n          path=\"tags\"\n        />\n        <SidebarWrapper>\n          <>\n            <div className=\"marginTopTitle\">\n              <h1 className=\"titleSeparate\">#Tags</h1>\n            </div>\n            <Row gutter={[30, 20]}>\n              {\n                edges.map((val) => (\n                  <Col key={val.node.name} xs={24} sm={24} md={12} lg={8}>\n                    <TagCard\n                      img={val.node.childImageSharp.fluid.src}\n                      name={val.node.name}\n                      description={tagData[val.node.name].description}\n                      color={tagData[val.node.name].color}\n                    />\n                  </Col>\n                ))\n              }\n            </Row>\n          </>\n        </SidebarWrapper>\n      </Layout>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              tags: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n            }).isRequired,\n          }).isRequired,\n        }).isRequired,\n      ).isRequired,\n    }).isRequired,\n    allFile: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            childImageSharp: PropTypes.shape({\n              fluid: PropTypes.object.isRequired,\n            }).isRequired,\n          }).isRequired,\n        }).isRequired,\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/index.md$/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            tags\n          }\n        }\n      }\n    }\n    allFile(filter: { relativeDirectory: { eq: \"tags\" } }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxWidth: 400) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Tags;\n"],"sourceRoot":""}