{"version":3,"sources":["webpack:///./src/templates/page.js"],"names":["Page","data","location","page","markdownRemark","type","className","frontmatter","title","dangerouslySetInnerHTML","__html","html"],"mappings":"2FAAA,wDAiDeA,UApCF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACZC,EAAOF,EAAKG,eAElB,OACI,oCACI,kBAAC,IAAD,CACIH,KAAMA,EACNC,SAAUA,EACVG,KAAK,SAET,kBAAC,IAAD,KACI,yBAAKC,UAAU,aACX,6BAASA,UAAU,WACf,wBAAIA,UAAU,iBAAiBH,EAAKI,YAAYC,OAGhD,6BACIF,UAAU,qCACVG,wBAAyB,CAAEC,OAAQP,EAAKQ","file":"component---src-templates-page-js-403044cad08aefa4b5be.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Layout } from '../components/common'\nimport { MetaData } from '../components/common/meta'\n\n/**\n* Single page (/:slug)\n*\n* This file renders a single page and loads all the content.\n*\n*/\nconst Page = ({ data, location }) => {\n    const page = data.markdownRemark;\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"page\"\n            />\n            <Layout>\n                <div className=\"container\">\n                    <article className=\"content\">\n                        <h1 className=\"content-title\">{page.frontmatter.title}</h1>\n\n                        {/* The main page content */}\n                        <section\n                            className=\"content-body load-external-scripts\"\n                            dangerouslySetInnerHTML={{ __html: page.html }}\n                        />\n                    </article>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nPage.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            excerpt: PropTypes.string.isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n}\n\nexport default Page\n\nexport const postQuery = graphql`\n    query($slug: String!) {\n        markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n            html\n            frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                slug\n                title\n                feature_image {\n                    childImageSharp {\n                      fluid(maxWidth: 1000, maxHeight: 500) {\n                        ...GatsbyImageSharpFluid\n                      }\n                    }\n                  }\n                author {\n                    frontmatter {\n                        name\n                        profile_image\n                        twitter\n                        facebook\n                        website\n                    }\n                }\n                tags {\n                    frontmatter {\n                        name\n                        slug\n                    }\n                }\n                meta_description\n                comment,\n                id\n            }\n            excerpt\n        }\n    }\n`\n"],"sourceRoot":""}