{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["Index","data","location","pageContext","console","log","posts","allMarkdownRemark","edges","isHome","className","map","node","key","id","post"],"mappings":"2FAAA,wDA+CeA,UAhCD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7BC,QAAQC,IAAR,QAAqBJ,GACrB,IAAMK,EAAQL,EAAKM,kBAAkBC,MAErC,OACI,oCACI,kBAAC,IAAD,CAAUN,SAAUA,IACpB,kBAAC,IAAD,CAAQO,QAAQ,GACZ,yBAAKC,UAAU,aACX,6BAASA,UAAU,aACdJ,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEP,kBAAC,IAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,QAGtC,kBAAC,IAAD,CAAYT,YAAaA","file":"component---src-templates-index-js-464870d7973b81552e0b.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Layout, PostCard, Pagination } from '../components/common'\nimport { MetaData } from '../components/common/meta'\n\n/**\n* Main index page (home page)\n*\n* Loads all posts from Ghost and uses pagination to navigate through them.\n* The number of posts that should appear per page can be setup\n* in /utils/siteConfig.js under `postsPerPage`.\n*\n*/\nconst Index = ({ data, location, pageContext }) => {\n    console.log(`Index`, data)\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n        <>\n            <MetaData location={location} />\n            <Layout isHome={true}>\n                <div className=\"container\">\n                    <section className=\"post-feed\">\n                        {posts.map(({ node }) => (\n                            // The tag below includes the markup for each post - components/common/PostCard.js\n                            <PostCard key={node.id} post={node} />\n                        ))}\n                    </section>\n                    <Pagination pageContext={pageContext} />\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nIndex.propTypes = {\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n}\n\nexport default Index\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\n\n// export const pageQuery = graphql`\n//   query GhostPostQuery($limit: Int!, $skip: Int!) {\n//     allGhostPost(\n//         sort: { order: DESC, fields: [published_at] },\n//         limit: $limit,\n//         skip: $skip\n//     ) {\n//       edges {\n//         node {\n//           ...GhostPostFields\n//         }\n//       }\n//     }\n//   }\n// `\n\nexport const pageQuery = graphql`\n    query MarkdownPostQuery($limit: Int!, $skip: Int!) {\n        allMarkdownRemark(\n            sort: { order: DESC, fields: [frontmatter___published_at] }\n            limit: $limit\n            skip: $skip\n            filter: {\n                frontmatter: { draft: { ne: true } }\n                fileAbsolutePath: { regex: \"/posts/\" }\n            }\n        ) {\n            edges {\n              node {\n                id\n                html\n                frontmatter {\n                  title\n                  date(formatString: \"MMMM DD, YYYY\")\n                  draft\n                  feature_image {\n                    childImageSharp {\n                        fluid(maxWidth: 400, maxHeight: 250) {\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                  }\n                  featured\n                  published_at\n                  weight\n                  page\n                  created_at\n                  slug\n                  tag_id\n                  name\n                  description\n                  meta_description\n                  meta_title\n                  visibility\n                  author {\n                      frontmatter {\n                          name\n                          profile_image\n                          description\n                          slug\n                      }\n                  }\n                  tags {\n                      id\n                      frontmatter {\n                          name\n                          slug\n                      }\n                  }\n                }\n                excerpt\n              }\n            }\n          }\n    }\n`\n"],"sourceRoot":""}