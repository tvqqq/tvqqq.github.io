{"version":3,"file":"component---src-templates-tags-index-jsx-0a47c788c53ba6a9b251.js","mappings":"iWAyCA,EAjCiB,SAACA,GAChB,MAAqDA,EAA7CC,KAAQC,KAAQC,EAAxB,EAAwBA,YAAaC,EAArC,EAAqCA,QAErC,OACE,uBAAKC,UCXa,oCDYhB,gBAAC,EAAAC,KAAD,CAAMC,GAAIC,IAAAA,eAAqBL,EAAYM,OACzC,uBACEJ,UCbe,sCDcfK,MAAO,CACLC,gBAAgB,QAAQR,EAAcA,EAAYS,MAAMC,gBAAgBC,MAAMC,IAAM,IAArE,QAIrB,uBAAKV,UClBS,kCDmBZ,gBAAC,EAAAC,KAAD,CAAMC,GAAIC,IAAAA,eAAqBL,EAAYM,OACzC,sBAAIJ,UClBK,iCDkBoBF,EAAcA,EAAYa,MAAQ,KAEjE,uBAAKX,UCrBK,gCDsBR,4BAAOF,EAAcc,GAAAA,CAAO,IAAIC,KAAKf,EAAYgB,OAAOC,OAAO,cAAgB,IAC/E,wBAAMV,MAAO,CAAEW,OAAQ,iBAAkBC,MAAO,SAC7C,IACD,gBAAC,IAAD,CAAiBC,KAAMC,EAAAA,IAAWC,KAAK,KAAKC,YAAU,KAExD,+BACMvB,EAAYwB,KAAKC,KAAK,QAG9B,yBAAIxB,M,6BEyGZ,EA1HgB,SAAC,GAA2B,IAAzBH,EAAwB,EAAxBA,KAAM4B,EAAkB,EAAlBA,YACfC,EAAR,UACQC,EAAQF,EAARE,IACFC,EAAO,IAAOD,EACdE,EAAcC,IAAAA,MAAAA,IACdC,EAAWlC,EAAKmC,QAAQC,MAAMC,MAAK,SAACC,GAAD,OAAUA,EAAKrC,KAAKsC,OAAST,KACnE7B,KAAKW,gBACF4B,EAAQxC,EAAKyC,kBAAkBL,MACrC,OACE,qBAAQhC,UAAU,gBAChB,qBAAQA,UAAU,aAChB,gBAACsC,EAAA,EAAD,MACA,gBAAC,IAAD,CACE3B,MAAOgB,EACPY,YAAW,mBAAqBZ,EAArB,KAAiCE,IAAAA,KAAYH,GAAKa,YAAlD,IACXnC,KAAMD,IAAAA,eAAqByB,EAAaF,GACxCc,SAAU,CAACb,GACXc,SAAUX,EAASY,MAAMhC,MAE3B,gBAACiC,EAAA,EAAD,KACE,uBAAK3C,UAAS,+CACZ,qBAAK4C,OAAQ,IACX,qBAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC5B,uBAAKhD,UCvCW,0CDwCd,gBAAC,IAAD,CACEA,UCxCG,gCDyCHS,MAAOqB,EAASrB,MAChBwC,IAAKtB,MAIX,qBAAKkB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,sBAAI3C,MAAO,CAAEY,MAAOY,IAAAA,KAAYH,GAAKT,MAAOiC,aAAc,IACxD,8BAASvB,IAEX,gBAACF,EAAD,CAAO0B,MAAO,GAAItB,IAAAA,KAAYH,GAAKa,gBAIzC,qBAAKK,OAAQ,CAAC,GAAI,KACfR,EAAMgB,KAAI,SAACC,EAAMC,GAAP,OAET,qBAAKA,IAAKA,EAAKT,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACzC,gBAAC,EAAD,CAAUpD,KAAMyD","sources":["webpack://tvqqq.github.io/./src/components/PostCard/index.jsx","webpack://tvqqq.github.io/./src/components/PostCard/postCard.module.less","webpack://tvqqq.github.io/./src/templates/tags/index.jsx","webpack://tvqqq.github.io/./src/templates/tags/tags.module.less"],"sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHashtag } from '@fortawesome/free-solid-svg-icons';\nimport * as style from './postCard.module.less';\nimport Utils from '../../utils/pageUtils';\n\nconst PostCard = (props) => {\n  const { data: { node: { frontmatter, excerpt } } } = props;\n\n  return (\n    <div className={style.postCard}>\n      <Link to={Utils.resolvePageUrl(frontmatter.path)}>\n        <div\n          className={style.postCardImg}\n          style={{\n            backgroundImage: `url(${frontmatter ? frontmatter.cover.childImageSharp.fluid.src : ''})`,\n          }}\n        />\n      </Link>\n      <div className={style.mrTp20}>\n        <Link to={Utils.resolvePageUrl(frontmatter.path)}>\n          <h3 className={style.title}>{frontmatter ? frontmatter.title : ''}</h3>\n        </Link>\n        <div className={style.meta}>\n          <span>{frontmatter ? moment(new Date(frontmatter.date)).format('DD-MM-YYYY') : ''}</span>\n          <span style={{ margin: '0px 2px 0 -2px', color: '#ccc' }}>\n            {' '}\n            <FontAwesomeIcon icon={faHashtag} size=\"sm\" fixedWidth />\n          </span>\n          <span>\n            {`${frontmatter.tags.join(', ')}`}\n          </span>\n        </div>\n        <p>{excerpt}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PostCard;\n","// extracted by mini-css-extract-plugin\nexport var postCard = \"postCard-module--postCard--y1G7I\";\nexport var postCardImg = \"postCard-module--postCardImg--0vmVe\";\nexport var mrTp20 = \"postCard-module--mrTp20--GLFc1\";\nexport var meta = \"postCard-module--meta--hIhww\";\nexport var title = \"postCard-module--title--TWnHX\";","/* eslint-disable react/forbid-prop-types */\n/* Vendor imports */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport {\n  Layout, Row, Col, Typography,\n} from 'antd';\n/* App imports */\nimport SEO from '../../components/Seo';\nimport Header from '../../components/PageLayout/Header';\nimport PostCard from '../../components/PostCard';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport Config from '../../../config';\nimport Utils from '../../utils/pageUtils';\nimport * as style from './tags.module.less';\n\nconst TagPage = ({ data, pageContext }) => {\n  const { Title } = Typography;\n  const { tag } = pageContext;\n  const tagName = `#${tag}`;\n  const tagPagePath = Config.pages.tag;\n  const tagImage = data.allFile.edges.find((edge) => edge.node.name === tag)\n    .node.childImageSharp;\n  const posts = data.allMarkdownRemark.edges;\n  return (\n    <Layout className=\"outerPadding\">\n      <Layout className=\"container\">\n        <Header />\n        <SEO\n          title={tagName}\n          description={`All posts about ${tagName}. ${Config.tags[tag].description} `}\n          path={Utils.resolvePageUrl(tagPagePath, tag)}\n          keywords={[tagName]}\n          imageUrl={tagImage.fixed.src}\n        />\n        <SidebarWrapper>\n          <div className={`marginTopTitle ${style.tagsList}`}>\n            <Row gutter={10}>\n              <Col xs={8} sm={6} md={6} lg={4}>\n                <div className={style.bannerImgContainer}>\n                  <Img\n                    className={style.bannerImg}\n                    fluid={tagImage.fluid}\n                    alt={tagName}\n                  />\n                </div>\n              </Col>\n              <Col xs={16} sm={18} md={18} lg={20}>\n                <h1 style={{ color: Config.tags[tag].color, marginBottom: 3 }}>\n                  <strong>{tagName}</strong>\n                </h1>\n                <Title level={5}>{Config.tags[tag].description}</Title>\n              </Col>\n            </Row>\n          </div>\n          <Row gutter={[40, 20]}>\n            {posts.map((post, key) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Col key={key} xs={24} sm={24} md={12} lg={8}>\n                <PostCard data={post} />\n              </Col>\n            ))}\n          </Row>\n        </SidebarWrapper>\n      </Layout>\n    </Layout>\n  );\n};\n\nTagPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object).isRequired,\n    }).isRequired,\n    allFile: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            childImageSharp: PropTypes.shape({\n              fluid: PropTypes.object.isRequired,\n            }).isRequired,\n          }).isRequired,\n        }),\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query ($tag: String!) {\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { tags: { in: [$tag] } }\n        fileAbsolutePath: { regex: \"/index.md$/\" }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allFile(filter: { name: { eq: $tag }, dir: { regex: \"/tags$/\" } }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fixed(width: 200, height: 200) {\n              ...GatsbyImageSharpFixed_tracedSVG\n            }\n            fluid(maxWidth: 300, maxHeight: 300) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default TagPage;\n","// extracted by mini-css-extract-plugin\nexport var tagsList = \"tags-module--tagsList--CA7+x\";\nexport var bannerImgContainer = \"tags-module--bannerImgContainer--nHHE6\";\nexport var bannerImg = \"tags-module--bannerImg--lLHEb\";"],"names":["props","data","node","frontmatter","excerpt","className","Link","to","Utils","path","style","backgroundImage","cover","childImageSharp","fluid","src","title","moment","Date","date","format","margin","color","icon","faHashtag","size","fixedWidth","tags","join","pageContext","Title","tag","tagName","tagPagePath","Config","tagImage","allFile","edges","find","edge","name","posts","allMarkdownRemark","Header","description","keywords","imageUrl","fixed","Sidebar","gutter","xs","sm","md","lg","alt","marginBottom","level","map","post","key"],"sourceRoot":""}